[gd_scene load_steps=10 format=3 uid="uid://pxya3hno2b17"]

[ext_resource type="Texture2D" uid="uid://h11vibnwk2nq" path="res://icon.svg" id="1_4flbx"]
[ext_resource type="Script" uid="uid://fm36g5mr14v" path="res://camera_spring_arm.gd" id="2_onrkg"]
[ext_resource type="Script" uid="uid://haklal1rprit" path="res://head.gd" id="3_i3pqv"]

[sub_resource type="GDScript" id="GDScript_sh265"]
script/source = "class_name Player extends CharacterBody3D


const SPEED = 5.0
const JUMP_VELOCITY = 4.5

@export var mouse_sensitivity := 0.005

@onready var camera_controller: Node3D = $CameraController
@onready var player: CharacterBody3D = $\".\"
@onready var camera: Camera3D = $CameraController/SpringArm3D/Camera3D
@onready var fp_camera: Camera3D = $CameraController/Head/FPCamera3D

var using_first_person := false

func _ready() -> void:
	await get_tree().process_frame  # Wait one frame so window is ready
	Input.set_mouse_mode(Input.MOUSE_MODE_CAPTURED)
	get_window().grab_focus()


func _physics_process(delta: float) -> void:
	if camera_controller.using_first_person:
		return
	
	
	if not is_on_floor():
		velocity += get_gravity() * delta
	
	# Handle jump.
	if Input.is_action_just_pressed(\"ui_accept\") and is_on_floor():
		velocity.y = JUMP_VELOCITY
	
	var input_dir := Input.get_vector(\"left\", \"right\", \"up\", \"down\" )
	var direction := (transform.basis * Vector3(input_dir.x, 0, input_dir.y)).normalized()
	direction = direction.rotated( Vector3.UP, camera.global_rotation.y )
	direction.normalized()
	if direction:
		velocity.x = direction.x * SPEED
		velocity.z = direction.z * SPEED
	else:
		velocity.x = move_toward(velocity.x, 0, SPEED)
		velocity.z = move_toward(velocity.z, 0, SPEED)
	
	
	move_and_slide()



func _input(event):
	if event.is_action_pressed(\"switch_camera\"):
		if player.velocity.y == 0 :
			camera_controller.change_camera()
	else: 
		return null
		
	if event is InputEventMouseMotion and using_first_person:
		rotation.x -= event.relative.y * mouse_sensitivity
"

[sub_resource type="CapsuleShape3D" id="CapsuleShape3D_sh265"]
radius = 0.637674
height = 1.5667

[sub_resource type="QuadMesh" id="QuadMesh_4flbx"]

[sub_resource type="StandardMaterial3D" id="StandardMaterial3D_onrkg"]
albedo_texture = ExtResource("1_4flbx")
billboard_mode = 1

[sub_resource type="GDScript" id="GDScript_4flbx"]
script/source = "class_name CamereaController extends Node3D

@onready var camera: Camera3D = $SpringArm3D/Camera3D
@onready var fp_camera: Camera3D = $Head/FPCamera3D
@onready var head := $Head
@export var mouse_sensitivity: float = 0.005

var yaw := 0.0 
var using_first_person := false

func change_camera():
	using_first_person = !using_first_person

	if using_first_person:
		# Sync FP camera (Head) to TP camera
		var tp_camera = $SpringArm3D/Camera3D
		var head = $Head

		# Set position and Y rotation only â€” keep FP head upright
		head.global_transform.origin = tp_camera.global_transform.origin
		head.rotation.y = tp_camera.global_rotation.y

	# Switch active cameras
	$SpringArm3D/Camera3D.current = not using_first_person
	$Head/FPCamera3D.current = using_first_person

func _input(event: InputEvent) -> void:
	if event is InputEventMouseMotion:
		# Adjust yaw
		yaw -= event.relative.x * mouse_sensitivity
		# Apply yaw only on Y axis
		rotation = Vector3(0, yaw, 0)

func _process(delta: float) -> void:
	# Copy the horizontal rotation from the player
	global_rotation.y = get_parent().global_rotation.y
"

[sub_resource type="SphereShape3D" id="SphereShape3D_onrkg"]
radius = 0.3

[node name="player" type="CharacterBody3D"]
transform = Transform3D(1, 0, 0, 0, 1, 0, 0, 0, 1, 0, 0.148338, 0)
script = SubResource("GDScript_sh265")

[node name="CollisionShape3D" type="CollisionShape3D" parent="."]
transform = Transform3D(1, 0, 0, 0, 1, 0, 0, 0, 1, 0, 0.576966, 0.0237136)
shape = SubResource("CapsuleShape3D_sh265")

[node name="MeshInstance3D" type="MeshInstance3D" parent="."]
transform = Transform3D(1, 0, 0, 0, 1, 0, 0, 0, 1, 0, 0.605208, 0)
mesh = SubResource("QuadMesh_4flbx")
surface_material_override/0 = SubResource("StandardMaterial3D_onrkg")

[node name="CameraController" type="Node3D" parent="."]
script = SubResource("GDScript_4flbx")

[node name="SpringArm3D" type="SpringArm3D" parent="CameraController"]
transform = Transform3D(1, 0, 0, 0, 1, 0, 0, 0, 1, 0, 8, 0)
shape = SubResource("SphereShape3D_onrkg")
spring_length = 15.0
script = ExtResource("2_onrkg")
min_vertical_angle = 0.0
max_vertical_angle = 0.0

[node name="Camera3D" type="Camera3D" parent="CameraController/SpringArm3D"]
transform = Transform3D(1, 0, 0, 0, 0.867357, 0.497686, 0, -0.497686, 0.867357, 0, -7.22487, 3.85391)

[node name="Head" type="Node3D" parent="CameraController"]
transform = Transform3D(1, 0, 0, 0, 1, 0, 0, 0, 1, 0, 0.785921, 0)
script = ExtResource("3_i3pqv")

[node name="FPCamera3D" type="Camera3D" parent="CameraController/Head"]
transform = Transform3D(1, 0, 0, 0, 1, 0, 0, 0, 1, 0, 0.5, 0)
